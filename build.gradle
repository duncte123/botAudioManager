/*
 * MIT License
 *
 * Copyright (c) 2018 Duncan Sterken
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'maven'
}

group = "ml.duncte123"
archivesBaseName = "botAudioManager"
version = "0.1.0"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()

    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

dependencies {
    compile group: 'com.afollestad', name: 'ason', version: '1.4.16'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.1'
    compile group: 'com.google.guava', name: 'guava', version: '24.0-jre'
    compile(group: 'com.github.Frederikam', name: 'Lavalink', version: 'fa6f096') {
        exclude group: 'com.github.Frederikam.Lavalink', module: 'Lavalink-Server'
    }
}

javadoc {
    failOnError = false
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.author()
    options.encoding = 'UTF-8'
    options.addStringOption('-html5')
}

compileJava {
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from "$buildDir/sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        MavenProject(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version = version

            artifact javadocJar
            artifact sourcesJar
        }
    }
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
}